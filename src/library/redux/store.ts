import { configureStore, combineReducers } from "@reduxjs/toolkit";
import themeReducer from "./features/themeSlice";
import modalReducer from "./features/ModalSlice";
import userReducer from "./features/userSlice";
import { persistStore, persistReducer } from "redux-persist";
import storage from "redux-persist/lib/storage";
import {
  FLUSH,
  REHYDRATE,
  PAUSE,
  PERSIST,
  PURGE,
  REGISTER,
} from "redux-persist";

// üîπ SSR (Server-Side Rendering) “Ø–µ–¥ localStorage –∞—à–∏–≥–ª–∞—Ö–≥“Ø–π –±–∞–π—Ö
const createNoopStorage = () => ({
  getItem: () => Promise.resolve(null),
  setItem: () => Promise.resolve(),
  removeItem: () => Promise.resolve(),
});

// üîπ LocalStorage –∑”©–≤—Ö”©–Ω browser –æ—Ä—á–∏–Ω–¥ –∞–∂–∏–ª–ª–∞—Ö—ã–≥ –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö
const isBrowser = typeof window !== "undefined";
const storageType = isBrowser ? storage : createNoopStorage();

const persistConfig = {
  key: "root",
  storage: storageType, // üîπ Next.js SSR –æ—Ä—á–∏–Ω–¥ —Ç–æ—Ö–∏—Ä—É—É–ª–∞–≤
  version: 1,
  whitelist: ["theme"], // üîπ –ó”©–≤—Ö”©–Ω `theme` state-–≥ —Ö–∞–¥–≥–∞–ª–Ω–∞
};

// üîπ Reducer-“Ø“Ø–¥–∏–π–≥ –Ω—ç–≥—Ç–≥—ç—Ö
const rootReducer = combineReducers({
  theme: themeReducer,
  modal: modalReducer,
  user: userReducer,
});

// üîπ Persist reducer “Ø“Ø—Å–≥—ç—Ö
const persistedReducer = persistReducer(persistConfig, rootReducer);

export const store = configureStore({
  reducer: persistedReducer,
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware({
      serializableCheck: {
        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER], // ‚úÖ Persist “Ø–π–ª–¥–ª“Ø“Ø–¥–∏–π–≥ –∑”©–≤—à”©”©—Ä”©—Ö
      },
    }),
});

// üîπ Persistor “Ø“Ø—Å–≥—ç—Ö
export const persistor = persistStore(store);

// üîπ –¢”©—Ä–ª–∏–π–Ω —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ–ª—Ç—É—É–¥
export type RootState = ReturnType<typeof rootReducer>;
export type AppDispatch = typeof store.dispatch;
export type AppStore = typeof store; // ‚úÖ `AppStore`-–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–ª—Å–æ–Ω
