"use client";

import React, { useState, useEffect } from "react";
import anime from "animejs";

interface UserModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSubmit: (data: any) => void;
}

const UserModal: React.FC<UserModalProps> = ({ isOpen, onClose, onSubmit }) => {
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    password: "",
    role: "user", // Default role
    employment: "–ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
    workingPart: "–ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∞–ª–±–∞",
    department: "–ì—Ä–∏–π–Ω –ò–Ω—Ç–µ—Ä–Ω—ç—à–Ω–ª –•–•–ö",
    permissions: [],
  });

  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleFormSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    onSubmit(formData);
    setFormData({
      firstName: "",
      lastName: "",
      email: "",
      password: "",
      role: "user",
      employment: "–ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä",
      workingPart: "–ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∞–ª–±–∞",
      department: "–ì—Ä–∏–π–Ω –ò–Ω—Ç–µ—Ä–Ω—ç—à–Ω–ª –•–•–ö",
      permissions: [],
    });
    setIsSubmitting(false);
  };

  useEffect(() => {
    if (isOpen) {
      anime({
        targets: ".modal-overlay",
        opacity: [0, 1],
        duration: 500,
        easing: "easeOutQuad",
      });
      anime({
        targets: ".modal-content",
        opacity: [0, 1],
        scale: [0.8, 1],
        duration: 500,
        easing: "easeOutQuad",
      });
    }
  }, [isOpen]);

  const closeModal = () => {
    anime({
      targets: ".modal-overlay",
      opacity: [1, 0],
      duration: 500,
      easing: "easeInQuad",
    });
    anime({
      targets: ".modal-content",
      opacity: [1, 0],
      scale: [1, 0.8],
      duration: 500,
      easing: "easeInQuad",
      complete: () => onClose(),
    });
  };

  return (
    <>
      {isOpen && (
        <div
          className="fixed inset-0 flex items-center justify-center z-50"
          onClick={closeModal} // Close modal when clicking outside
        >
          <div className="modal-overlay fixed inset-0 bg-black/50"></div>
          <div
            className="modal-content bg-white p-6 rounded-lg shadow-lg w-full max-w-md relative"
            onClick={(e) => e.stopPropagation()} // Prevent modal from closing on content click
          >
            <button
              onClick={closeModal}
              className="absolute top-2 right-2 text-gray-600 hover:text-gray-800"
            >
              ‚úï
            </button>
            <h2 className="text-lg font-semibold mb-4">–•—ç—Ä—ç–≥–ª—ç–≥—á –Ω—ç–º—ç—Ö</h2>
            <form className="space-y-4" onSubmit={handleFormSubmit}>
              <input
                type="text"
                name="lastName"
                value={formData.lastName}
                onChange={handleChange}
                placeholder="–û–≤–æ–≥"
                className="w-full border p-2 rounded"
                required
              />
              <input
                type="text"
                name="firstName"
                value={formData.firstName}
                onChange={handleChange}
                placeholder="–ù—ç—Ä"
                className="w-full border p-2 rounded"
                required
              />
              <input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                placeholder="–ò–º—ç–π–ª"
                className="w-full border p-2 rounded"
                required
              />
              <input
                type="password"
                name="password"
                value={formData.password}
                onChange={handleChange}
                placeholder="–ù—É—É—Ü “Ø–≥"
                className="w-full border p-2 rounded"
                required
              />
              <select
                name="role"
                value={formData.role}
                onChange={handleChange}
                className="w-full border p-2 rounded"
              >
                <option value="user">User</option>
                <option value="admin">Admin</option>
                <option value="SuperAdmin">SuperAdmin</option>
              </select>
              <select
                name="workingPart"
                value={formData.workingPart}
                onChange={handleChange}
                className="w-full border p-2 rounded"
              >
                <option value="–ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∞–ª–±–∞">
                  –ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∞–ª–±–∞
                </option>
                <option value="–ò–Ω–∂–µ–Ω–µ—Ä —Ç–µ—Ö–Ω–∏–∫–∏–π–Ω –∞–ª–±–∞">
                  –ò–Ω–∂–µ–Ω–µ—Ä —Ç–µ—Ö–Ω–∏–∫–∏–π–Ω –∞–ª–±–∞
                </option>
                <option value="“Æ–π–ª –∞–∂–∏–ª–ª–∞–≥–∞–∞–Ω—ã –∞–ª–±–∞">
                  “Æ–π–ª –∞–∂–∏–ª–ª–∞–≥–∞–∞–Ω—ã –∞–ª–±–∞
                </option>
              </select>
              <select
                name="department"
                value={formData.department}
                onChange={handleChange}
                className="w-full border p-2 rounded"
              >
                <option value="–ì—Ä–∏–π–Ω –ò–Ω—Ç–µ—Ä–Ω—ç—à–Ω–ª –•–•–ö">
                  –ì—Ä–∏–π–Ω –ò–Ω—Ç–µ—Ä–Ω—ç—à–Ω–ª –•–•–ö
                </option>
                <option value="–ì—Ä–∏–π–Ω –¢—Ä–µ–π–¥ –•–•–ö">–ì—Ä–∏–π–Ω –¢—Ä–µ–π–¥ –•–•–ö</option>
                <option value="–ì—Ä–∏–π–Ω –ò–º–ø–µ–∫—Å –•–•–ö">–ì—Ä–∏–π–Ω –ò–º–ø–µ–∫—Å –•–•–ö</option>
                <option value="–ì—Ä–∏–π–Ω –ò–Ω–¥–∞—Å—Ç—Ä–∏ –•–•–ö">–ì—Ä–∏–π–Ω –ò–Ω–¥–∞—Å—Ç—Ä–∏ –•–•–ö</option>
                <option value="–ì—Ä–∏–π–Ω –§–∞–∫—Ç–æ—Ä–∏ –•–•–ö">–ì—Ä–∏–π–Ω –§–∞–∫—Ç–æ—Ä–∏ –•–•–ö</option>
              </select>
              <select
                name="employment"
                value={formData.employment}
                onChange={handleChange}
                className="w-full border p-2 rounded"
              >
                <option value="–ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä">
                  –ú—ç–¥—ç—ç–ª—ç–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä
                </option>
                <option value="–•–æ–ª–±–æ–æ –¥–æ—Ö–∏–æ–ª–ª—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä">
                  –•–æ–ª–±–æ–æ –¥–æ—Ö–∏–æ–ª–ª—ã–Ω –∏–Ω–∂–µ–Ω–µ—Ä
                </option>
                <option value="–°“Ø–ª–∂—ç—ç–Ω–∏–π –∏–Ω–∂–µ–Ω–µ—Ä">–°“Ø–ª–∂—ç—ç–Ω–∏–π –∏–Ω–∂–µ–Ω–µ—Ä</option>
                <option value="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä">
                  –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏–π–Ω –∏–Ω–∂–µ–Ω–µ—Ä
                </option>
                <option value="–°–∏—Å—Ç–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä">
                  –°–∏—Å—Ç–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                </option>
              </select>
              <button
                type="submit"
                className="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 flex items-center justify-center gap-2"
                disabled={isSubmitting}
              >
                {isSubmitting ? "–ò–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞..." : "–•—ç—Ä—ç–≥–ª—ç–≥—á –Ω—ç–º—ç—Ö"}{" "}
                <span>üöÄ</span>
              </button>
            </form>
          </div>
        </div>
      )}
    </>
  );
};

export default UserModal;
